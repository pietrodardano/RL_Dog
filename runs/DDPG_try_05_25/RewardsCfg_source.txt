@configclass
class RewardsCfg:
    """
    Reward configuration for the AlienGo environment.
    """
    ## Rewards
    # Track linear velocity: 0
    track_lin_vel_xy_exp = RewTerm(
        func=mdp.track_lin_vel_xy_exp, weight=0.9, params={"command_name": "base_velocity", "std": math.sqrt(0.25)}
    )
    # Track angular velocity: 0
    # track_ang_vel_z_exp = RewTerm(
    #     func=mdp.track_ang_vel_z_exp, weight=0.8, params={"command_name": "base_velocity", "std": math.sqrt(0.25)}
    # )
    
    ## Penalities
    # lin_vel_z_l2    = RewTerm(func=mdp.lin_vel_z_l2,      weight=-0.6)
    # ang_vel_xy_l2   = RewTerm(func=mdp.ang_vel_xy_l2,     weight=-0.05)
    # dof_torques_l2  = RewTerm(func=mdp.joint_torques_l2,  weight=-1.0e-5)
    # dof_acc_l2      = RewTerm(func=mdp.joint_acc_l2,      weight=-2.5e-7)
    # action_rate_l2  = RewTerm(func=mdp.action_rate_l2,    weight=-0.01)
    
    dof_pos_dev     = RewTerm(func=mdp.joint_deviation_l1, weight=-0.4) 
    
    ## Penalities but with mdp.obs
    # base_height_l2 = RewTerm(
    #     func=mdp.base_height_l2,
    #     weight=-0.8,
    #     params={"asset_cfg": SceneEntityCfg("robot", body_names=["base"]), "target_height": 0.40}, # "target": 0.35         target not a param of base_pos_z
    # )
    
    # undesired_thigh_contacts = RewTerm(
    #     func=mdp.undesired_contacts,
    #     weight=-0.6,
    #     params={"sensor_cfg": SceneEntityCfg("contact_forces", body_names=".*_thigh"), "threshold": 1.0},
    # )
    # undesired_body_contacts = RewTerm(
    #     func=mdp.undesired_contacts,
    #     weight=-1.0,
    #     params={"sensor_cfg": SceneEntityCfg("contact_forces", body_names="base"), "threshold": 1.0},
    # )
